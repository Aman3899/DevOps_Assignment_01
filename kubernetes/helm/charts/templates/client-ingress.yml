{{- if .Values.client.ingress.enabled -}} # Only create if ingress is enabled
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "my-blog-app.fullname" . }}-client
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "my-blog-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: client
  {{- with .Values.client.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }} # Render annotations from values
  {{- end }}
spec:
  {{- if .Values.client.ingress.className }}
  ingressClassName: {{ .Values.client.ingress.className }}
  {{- end }}
  {{- if .Values.client.ingress.tls }}
  tls:
    {{- range .Values.client.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.client.ingress.hosts }} # Loop through hosts
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }} # Loop through paths for the host
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                # Point to the client service created by the chart
                name: {{ include "my-blog-app.fullname" . }}-client
                port:
                  # Use the client service port from values
                  number: {{ $.Values.client.service.port }}
          {{- end }}
    {{- end }}
{{- end }}