{{- if .Values.mongodb }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "my-blog-app.fullname" . }}-mongo
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "my-blog-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: mongodb
spec:
  replicas: {{ .Values.mongodb.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "my-blog-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mongodb
  serviceName: {{ .Values.mongodb.serviceName | default (printf "%s-mongo-headless" (include "my-blog-app.fullname" .)) }}
  template:
    metadata:
      {{- with .Values.mongodb.podAnnotations }} 
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "my-blog-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mongodb
    spec:
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "my-blog-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: mongo
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: mongodb
              containerPort: {{ .Values.mongodb.port | default 27017 }}
              protocol: TCP
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-blog-app.fullname" . }}-mongo-secret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-blog-app.fullname" . }}-mongo-secret
                  key: password
          livenessProbe:
            exec:
              command: ["mongosh", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            exec:
              command: ["mongosh", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
          {{- if .Values.mongodb.persistence.enabled }}
            - name: {{ include "my-blog-app.fullname" . }}-mongo-data
              mountPath: /data/db
          {{- else }}
            - name: mongo-data-temp
              mountPath: /data/db
          {{- end }}
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
      {{- if not .Values.mongodb.persistence.enabled }}
      volumes:
        - name: mongo-data-temp
          emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.mongodb.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "my-blog-app.fullname" . }}-mongo-data
        labels:
          {{- include "my-blog-app.labels" . | nindent 10 }}
          app.kubernetes.io/component: mongodb
      spec:
        accessModes:
          - {{ .Values.mongodb.persistence.accessMode | default "ReadWriteOnce" }}
        resources:
          requests:
            storage: {{ .Values.mongodb.persistence.size }}
        {{- if .Values.mongodb.persistence.storageClassName }}
        {{- if (eq "-" .Values.mongodb.persistence.storageClassName) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.mongodb.persistence.storageClassName }}
        {{- end }}
        {{- end }}
  {{- end }}
{{- end }}